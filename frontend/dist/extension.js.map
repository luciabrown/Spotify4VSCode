{"version":3,"file":"extension.js","mappings":"23BAcA,oBAAyBA,GAErB,MAAMC,EAAWC,QAAQD,SACnBE,EAAOD,QAAQC,KAEfC,EACW,UAAbH,EACM,WAAWA,KAAYE,QACvB,WAAWF,KAAYE,IAG3BE,EAAcL,EAAQM,eAAeC,EAAKC,KAAK,MAAO,MAAOJ,IAC7DK,EAAUC,EAAGC,MAAMN,EAAa,GAAI,CACtCO,IAAKL,EAAKM,QAAQR,GAClBS,aAAa,IAEjBL,EAAQM,OAAOC,GAAG,OAAQC,GAAKC,QAAQC,IAAI,YAAYF,MACvDR,EAAQW,OAAOJ,GAAG,OAAQC,GAAKC,QAAQG,MAAM,kBAAkBJ,MAC/DR,EAAQO,GAAG,QAASM,GAAQJ,QAAQC,IAAI,mBAAmBG,MAC3DC,EAAOC,OAAOC,uBAAuB,sBAErC,MAAMC,EAASC,GAAe,IAAIC,QAAQC,GAAKC,WAAWD,EAAGF,IAC7CJ,EAAOQ,SAASC,gBAAgB,4BAA6B,KAC/ET,EAAOC,OAAOC,uBAAuB,2CAEtCzB,EAAQiC,cAAcC,KACf,IAAIX,EAAOY,WAAW,KAClB,IAAM1B,EAAQ2B,MAAQ,CAAE,MAAO,KAKvC,MAAMC,EAAUd,EAAOQ,SAASC,gBAAgB,kCAAmCM,UAC/E,IACI,MAAMC,QAAYC,MAAM,mCAAoC,CAAEC,OAAQ,QAChEC,QAAaH,EAAIG,OACvBnB,EAAOC,OAAOC,uBAAuB,SAASiB,IAClD,CAAE,MAAOC,GACLpB,EAAOC,OAAOoB,iBAAiB,eAAeD,IAClD,IAEJ3C,EAAQiC,cAAcC,KAAKG,GAG3B,MAAMQ,EAAUtB,EAAOQ,SAASC,gBAAgB,6BAA8BM,UAC1E,IACIQ,IACA,MAAMP,QAAYC,MAAM,8BAA+B,CAAEC,OAAQ,SAC3DC,QAAaH,EAAIG,OACvBnB,EAAOC,OAAOC,uBAAuB,SAASiB,WACxChB,EAAM,KACZqB,IACAC,GACJ,CAAE,MAAOL,GACLpB,EAAOC,OAAOoB,iBAAiB,eAAeD,KAC9CK,GACJ,IAEJhD,EAAQiC,cAAcC,KAAKW,GAG3B,MAAMI,EAAU1B,EAAOQ,SAASC,gBAAgB,6BAA8BM,UAC1E,IACIQ,IACA,MAAMP,QAAYC,MAAM,8BAA+B,CAAEC,OAAQ,SAC3DC,QAAaH,EAAIG,OACvBnB,EAAOC,OAAOC,uBAAuB,SAASiB,WACxChB,EAAM,KACZqB,IACAC,GACJ,CAAE,MAAOL,GACLI,IACAC,GACJ,IAEJhD,EAAQiC,cAAcC,KAAKe,GAG3B,MAAMC,EAAgB3B,EAAOC,OAAO2B,oBAAoB5B,EAAO6B,mBAAmBC,KAAM,KACxFH,EAAcR,KAAO,mCACrBQ,EAAcI,OACdtD,EAAQiC,cAAcC,KAAKgB,GAG3B,MAAMK,EAAahC,EAAOC,OAAO2B,oBAAoB5B,EAAO6B,mBAAmBC,KAAM,IACrFE,EAAWb,KAAO,iBAClBa,EAAWC,QAAU,oBACrBD,EAAWE,QAAU,kCACrBF,EAAWD,OACXtD,EAAQiC,cAAcC,KAAKqB,GAG3B,MAAMG,EAAanC,EAAOC,OAAO2B,oBAAoB5B,EAAO6B,mBAAmBC,KAAM,IACrFK,EAAWhB,KAAO,4BAClBgB,EAAWF,QAAU,mBACrBE,EAAWD,QAAU,6BACrBC,EAAWJ,OACXtD,EAAQiC,cAAcC,KAAKwB,GAG3B,MAAMC,EAAapC,EAAOC,OAAO2B,oBAAoB5B,EAAO6B,mBAAmBC,KAAM,IAOrF,IAAIO,EAGJ,SAASZ,IACLF,IACAc,EAAeC,YAAYd,EAAqB,KACpD,CAEA,SAASD,IACDc,IACAE,cAAcF,GACdA,OAAeG,EAEvB,CAGHzB,eAAeS,IACd,IACC,MAAMR,QAAYC,MAAM,qCACxB,IAAKD,EAAIyB,GAER,YADAd,EAAcR,KAAO,gCAGtB,MAAMuB,QAAc1B,EAAI2B,OACxBhD,QAAQC,IAAI,sBAAuB8C,GAEf,WAAhBA,EAAKE,OACTjB,EAAcR,KAAO,6BACVuB,EAAKG,KAChBlB,EAAcR,KAAO,WAAWuB,EAAKG,UAAUH,EAAKI,UAEpDnB,EAAcR,KAAO,0BAEtB,CAAE,MAAOrB,GACR6B,EAAcR,KAAO,kCACtB,CACD,CA1CGiB,EAAWjB,KAAQ,oBACnBiB,EAAWH,QAAU,eACrBG,EAAWF,QAAU,6BACrBE,EAAWL,OACXtD,EAAQiC,cAAcC,KAAKyB,GAwC3BZ,IACAC,GAEJ,EAEA,wBAA8B,EApK9B,kBACA,YACA,W,UCFAsB,EAAOC,QAAUC,QAAQ,gB,UCAzBF,EAAOC,QAAUC,QAAQ,S,UCAzBF,EAAOC,QAAUC,QAAQ,O,GCCrBC,EAA2B,CAAC,ECE5BC,EDCJ,SAASC,EAAoBC,GAE5B,IAAIC,EAAeJ,EAAyBG,GAC5C,QAAqBb,IAAjBc,EACH,OAAOA,EAAaN,QAGrB,IAAID,EAASG,EAAyBG,GAAY,CAGjDL,QAAS,CAAC,GAOX,OAHAO,EAAoBF,GAAUG,KAAKT,EAAOC,QAASD,EAAQA,EAAOC,QAASI,GAGpEL,EAAOC,OACf,CCnB0BI,CAAoB,K","sources":["webpack://Spotify4VSCode/./src/extension.ts","webpack://Spotify4VSCode/external node-commonjs \"child_process\"","webpack://Spotify4VSCode/external commonjs \"vscode\"","webpack://Spotify4VSCode/external node-commonjs \"path\"","webpack://Spotify4VSCode/webpack/bootstrap","webpack://Spotify4VSCode/webpack/startup"],"sourcesContent":["import * as vscode from 'vscode';\r\nimport * as cp from 'child_process';\r\nimport * as path from 'path';\r\n\r\ninterface SpotifyNowPlaying {\r\n  status: 'Playing' | 'Paused';\r\n  song?: string;\r\n  artists?: string;\r\n  album?: string;\r\n  album_art_url?: string;\r\n  spotify_url?: string;\r\n  description?: string;\r\n}\r\n\r\nexport function activate(context: vscode.ExtensionContext) {\r\n\r\n    const platform = process.platform;\r\n    const arch = process.arch;\r\n\r\n    const baseName =\r\n        platform === 'win32'\r\n            ? `backend-${platform}-${arch}.exe`\r\n            : `backend-${platform}-${arch}`;\r\n\r\n\r\n    const backendPath = context.asAbsolutePath(path.join('out', 'bin', baseName));\r\n    const backend = cp.spawn(backendPath, [], {\r\n        cwd: path.dirname(backendPath),\r\n        windowsHide: true\r\n    });\r\n    backend.stdout.on('data', d => console.log(`backend: ${d}`));\r\n    backend.stderr.on('data', d => console.error(`backend error: ${d}`));\r\n    backend.on('close', code => console.log(`backend exited: ${code}`));\r\n    vscode.window.showInformationMessage('Go backend started');\r\n\r\n    const delay = (ms: number) => new Promise(r => setTimeout(r, ms));\r\n\tconst disposable = vscode.commands.registerCommand('Spotify4VSCode.helloWorld', () => {\r\n\t\tvscode.window.showInformationMessage('Hello World from SpotifyNowListening!');\r\n\t});\r\n\tcontext.subscriptions.push(\r\n        new vscode.Disposable(() => {\r\n            try { backend.kill(); } catch {}\r\n        })\r\n    );\r\n\r\n    // Play command\r\n    const playCmd = vscode.commands.registerCommand('Spotify4VSCode.spotifyPlayPause', async () => {\r\n        try {\r\n            const res = await fetch('http://127.0.0.1:12345/playpause', { method: 'PUT' });\r\n            const text = await res.text();\r\n            vscode.window.showInformationMessage(`Play: ${text}`);\r\n        } catch (err) {\r\n            vscode.window.showErrorMessage(`Play error: ${err}`);\r\n        }\r\n    });\r\n    context.subscriptions.push(playCmd);\r\n    \r\n    // Prev command\r\n    const prevCmd = vscode.commands.registerCommand('Spotify4VSCode.spotifyPrev', async () => {\r\n        try {\r\n            stopPolling();\r\n            const res = await fetch('http://127.0.0.1:12345/prev', { method: 'POST' });\r\n            const text = await res.text();\r\n            vscode.window.showInformationMessage(`Prev: ${text}`);\r\n            await delay(300); // give Spotify time to switch tracks\r\n            updateSpotifyStatus(); //show new track\r\n            startPolling();\r\n        } catch (err) {\r\n            vscode.window.showErrorMessage(`Prev error: ${err}`);\r\n            startPolling();\r\n        }\r\n    });\r\n    context.subscriptions.push(prevCmd);\r\n\r\n    // Next command\r\n    const nextCmd = vscode.commands.registerCommand('Spotify4VSCode.spotifyNext', async () => {\r\n        try {\r\n            stopPolling();\r\n            const res = await fetch('http://127.0.0.1:12345/next', { method: 'POST' });\r\n            const text = await res.text();\r\n            vscode.window.showInformationMessage(`Next: ${text}`);\r\n            await delay(400); // give Spotify time to switch tracks\r\n            updateSpotifyStatus();\r\n            startPolling();\r\n        } catch (err) {\r\n            updateSpotifyStatus(); //show new track\r\n            startPolling();\r\n        }\r\n    });\r\n    context.subscriptions.push(nextCmd);\r\n\r\n    // Status Bar: Song\r\n    const statusBarItem = vscode.window.createStatusBarItem(vscode.StatusBarAlignment.Left, 100);\r\n    statusBarItem.text = '$(sync~spin) Fetching Spotify...';\r\n    statusBarItem.show();\r\n    context.subscriptions.push(statusBarItem);\r\n\r\n    // Status Bar: Play/Pause Button\r\n    const playButton = vscode.window.createStatusBarItem(vscode.StatusBarAlignment.Left, 99);\r\n    playButton.text = '$(play-circle)';\r\n    playButton.tooltip = 'PlayPause Spotify';\r\n    playButton.command = 'Spotify4VSCode.spotifyPlayPause';\r\n    playButton.show();\r\n    context.subscriptions.push(playButton);\r\n\r\n    // Status Bar: Prev Button\r\n    const prevButton = vscode.window.createStatusBarItem(vscode.StatusBarAlignment.Left, 98);\r\n    prevButton.text = '$(debug-reverse-continue)';\r\n    prevButton.tooltip = 'Previous Spotify';\r\n    prevButton.command = 'Spotify4VSCode.spotifyPrev';\r\n    prevButton.show();\r\n    context.subscriptions.push(prevButton);\r\n\r\n    // Status Bar: Next Button\r\n    const nextButton = vscode.window.createStatusBarItem(vscode.StatusBarAlignment.Left, 97);\r\n    nextButton.text =  '$(debug-continue)';\r\n    nextButton.tooltip = 'Next Spotify';\r\n    nextButton.command = 'Spotify4VSCode.spotifyNext';\r\n    nextButton.show();\r\n    context.subscriptions.push(nextButton);\r\n\r\n    let pollInterval: NodeJS.Timeout | undefined;\r\n\r\n    // Poll control\r\n    function startPolling() {\r\n        stopPolling();\r\n        pollInterval = setInterval(updateSpotifyStatus, 15000);\r\n    }\r\n\r\n    function stopPolling() {\r\n        if (pollInterval) {\r\n            clearInterval(pollInterval);\r\n            pollInterval = undefined;\r\n        }\r\n    }\r\n\r\n\t// Poll spotify\r\n\tasync function updateSpotifyStatus() {\r\n\t\ttry {\r\n\t\t\tconst res = await fetch('http://127.0.0.1:12345/nowplaying');\r\n\t\t\tif (!res.ok) {\r\n\t\t\t\tstatusBarItem.text = '$(error) Spotify fetch error';\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tconst data = (await res.json()) as SpotifyNowPlaying;\r\n\t\t\tconsole.log('Spotify fetch data:', data);\r\n\r\n\t\t\tif (data.status === 'Paused') {\r\n\t\t\tstatusBarItem.text = '$(debug-pause) Not playing';\r\n\t\t\t} else if (data.song) {\r\n\t\t\tstatusBarItem.text = `$(play) ${data.song} â€” ${data.artists}`;\r\n\t\t\t} else {\r\n\t\t\tstatusBarItem.text = '$(question) No song data';\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tstatusBarItem.text = '$(error) Failed to fetch Spotify';\r\n\t\t}\r\n\t}\r\n\r\n    updateSpotifyStatus();\r\n    startPolling();\r\n    \r\n}\r\n\r\nexport function deactivate() {}","module.exports = require(\"child_process\");","module.exports = require(\"vscode\");","module.exports = require(\"path\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(265);\n"],"names":["context","platform","process","arch","baseName","backendPath","asAbsolutePath","path","join","backend","cp","spawn","cwd","dirname","windowsHide","stdout","on","d","console","log","stderr","error","code","vscode","window","showInformationMessage","delay","ms","Promise","r","setTimeout","commands","registerCommand","subscriptions","push","Disposable","kill","playCmd","async","res","fetch","method","text","err","showErrorMessage","prevCmd","stopPolling","updateSpotifyStatus","startPolling","nextCmd","statusBarItem","createStatusBarItem","StatusBarAlignment","Left","show","playButton","tooltip","command","prevButton","nextButton","pollInterval","setInterval","clearInterval","undefined","ok","data","json","status","song","artists","module","exports","require","__webpack_module_cache__","__webpack_exports__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","call"],"sourceRoot":""}